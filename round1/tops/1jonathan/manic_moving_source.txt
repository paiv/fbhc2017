//start of jonathanirvings' template v3.0.3 (BETA)

#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
typedef pair<int,int> pii;
typedef pair<LL,LL> pll;
typedef pair<string,string> pss;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<pii> vii;
typedef vector<LL> vl;
typedef vector<vl> vvl;

double EPS = 1e-9;
int INF = 1000000005;
long long INFF = 1000000000000000005LL;
double PI = acos(-1);
int dirx[8] = {-1,0,0,1,-1,-1,1,1};
int diry[8] = {0,1,-1,0,-1,1,-1,1};

#ifdef TESTING
  #define DEBUG fprintf(stderr,"====TESTING====\n")
  #define VALUE(x) cerr << "The value of " << #x << " is " << x << endl
  #define debug(...) fprintf(stderr, __VA_ARGS__)
#else
  #define DEBUG 
  #define VALUE(x)
  #define debug(...)
#endif

#define FOR(a,b,c) for (int (a)=(b);(a)<(c);++(a))
#define FORN(a,b,c) for (int (a)=(b);(a)<=(c);++(a))
#define FORD(a,b,c) for (int (a)=(b);(a)>=(c);--(a))
#define FORSQ(a,b,c) for (int (a)=(b);(a)*(a)<=(c);++(a))
#define FORC(a,b,c) for (char (a)=(b);(a)<=(c);++(a))
#define FOREACH(a,b) for (auto &(a) : (b))
#define REP(i,n) FOR(i,0,n)
#define REPN(i,n) FORN(i,1,n)
#define MAX(a,b) a = max(a,b)
#define MIN(a,b) a = min(a,b)
#define SQR(x) ((LL)(x) * (x))
#define RESET(a,b) memset(a,b,sizeof(a))
#define fi first
#define se second
#define mp make_pair
#define pb push_back
#define ALL(v) v.begin(),v.end()
#define ALLA(arr,sz) arr,arr+sz
#define SIZE(v) (int)v.size()
#define SORT(v) sort(ALL(v))
#define REVERSE(v) reverse(ALL(v))
#define SORTA(arr,sz) sort(ALLA(arr,sz))
#define REVERSEA(arr,sz) reverse(ALLA(arr,sz))
#define PERMUTE next_permutation
#define TC(t) while(t--)

inline string IntToString(LL a){
  char x[100];
  sprintf(x,"%lld",a); string s = x;
  return s;
}

inline LL StringToInt(string a){
  char x[100]; LL res;
  strcpy(x,a.c_str()); sscanf(x,"%lld",&res);
  return res;
}

inline string GetString(void){
  char x[1000005];
  scanf("%s",x); string s = x;
  return s;
}

inline string uppercase(string s){
  int n = SIZE(s); 
  REP(i,n) if (s[i] >= 'a' && s[i] <= 'z') s[i] = s[i] - 'a' + 'A';
  return s;
}

inline string lowercase(string s){
  int n = SIZE(s); 
  REP(i,n) if (s[i] >= 'A' && s[i] <= 'Z') s[i] = s[i] - 'A' + 'a';
  return s;
}

inline void OPEN (string s) {
  freopen ((s + ".in").c_str (), "r", stdin);
  freopen ((s + ".out").c_str (), "w", stdout);
}

//end of jonathanirvings' template v3.0.3 (BETA)

int T;
int n,m,k;
int a,b,c;
LL dist[105][105];
LL dp[105][5005][2];
pii misi[5005];

LL jahja(int now,int turn,int ada)
{
  if (turn == k) return 0;
  LL &ret = dp[now][turn][ada];
  if (ret >= 0) return ret;
  ret = INFF;
  if (ada)
  {
    return ret = jahja(misi[turn].se,turn+1,0) + dist[now][misi[turn].se];
  }
  if (turn + 1 < k)
    MIN(ret,jahja(misi[turn+1].fi,turn,1) + dist[now][misi[turn+1].fi]);
  MIN(ret,jahja(misi[turn+1].fi,turn+1,0) + 
          dist[now][misi[turn].se] + 
          dist[misi[turn].se][misi[turn+1].fi]);
  //debug("%d %d %d %lld\n",now,turn,ada,ret);
  return ret;
}

int main()
{
  scanf("%d",&T);
  REPN(cases,T)
  {
    printf("Case #%d: ",cases);
    scanf("%d %d %d",&n,&m,&k);
    REP(i,n)
    {
      REP(j,n) dist[i][j] = INFF;
      dist[i][i] = 0;
    }
    TC(m)
    {
      scanf("%d %d %d",&a,&b,&c);
      --a; --b;
      MIN(dist[a][b],(LL)c);
      MIN(dist[b][a],(LL)c);
    }
    REP(l,n) REP(i,n) REP(j,n) MIN(dist[i][j],dist[i][l]+dist[l][j]);
    //REP(i,n) REP(j,n) debug("%d %d %lld\n",i,j,dist[i][j]);
    REP(i,k)
    {
      scanf("%d %d",&misi[i].fi,&misi[i].se);
      --misi[i].fi; --misi[i].se;
    }
    RESET(dp,-1);
    misi[k] = mp(misi[k-1].se,misi[k-1].se);
    LL risan = jahja(misi[0].fi,0,0) + dist[0][misi[0].fi];
    if (risan >= INF) puts("-1");
    else printf("%lld\n",risan);
  }
  return 0;
}









