#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;

#define all(c) (c).begin(),(c).end()
#define sz(c) (int)(c).size()
#define pb push_back
#define mp make_pair
#define x first
#define y second
#define image(a) {sort(all(a)), a.resize(unique(all(a)) - a.begin());}

const int inf = 1e9;

void solve() {
  int n, m;
  cin >> n >> m;
  vector<vector<int>> a(n);
  for (int i = 0; i < n; i++) {
    for (int j = 0; j < m; j++) {
      int x;
      cin >> x;
      a[i].pb(x);
    }
    sort(all(a[i]));
  }
  vector<vector<int>> dp(n + 1, vector<int>(n + 1, inf));
  dp[0][0] = 0;
  for (int i = 0; i < n; i++) {
    for (int cur = 0; cur <= n; cur++) if (dp[i][cur] != inf) {
      int curs = 0;
      for (int j = 0; j <= m; j++) {
        if (cur + j - 1 >= 0 && cur + j - 1 <= n) {
          dp[i + 1][cur + j - 1] = min(dp[i + 1][cur + j - 1], dp[i][cur] + j * j + curs);
        }
        if (j < m) {
          curs += a[i][j];
        }
      }
    }
  }
  cout << dp[n][0] << endl;
}

int main(){
  #ifdef home
  assert(freopen("a.out","wt",stdout));
  assert(freopen("a.in","rt",stdin));
  #endif              
  int T;
  cin >> T;
  for (int ti = 1; ti <= T; ti++) {
    cout << "Case #" << ti << ": ";
    solve();
  }
  return 0;
}
